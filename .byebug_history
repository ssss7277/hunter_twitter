continue
@guest_user
continue
@guest_user
exit
Favorite.all.count
continue
next
post_path(post1)
quit
exxit
post_path(post1)
 definition_path(post1)
continue
next
post1.body
post1
exit
post1
user1
exit
Favorite.count
favorite.count
favorite1
favorite
exit
Post.all
exit
user3
user2
user1
User.count
exit
exitr
User.count
let!(:user) { create(:user) }
user
let!(:user){ create(:user, name: "hogehoge", email: "hoge@example")}
user
let(:user){ FactoryBot.create(:user) }
user
let!(:user){ create :user, name: "hogehoge", email: "hoge@example"}
:user
user
User.count
let(:user){ create :user, name: "hogehoge", email: "hoge@example"}
exit
let(:user){ create :user, name: "hogehoge", email: "hoge@example"}
@user
user
User.count
exit
login(user.email, "12345678")
login(user.email, user.crypted_password)
user.password
user.email
user
login(user.email, user.password)
exit
login(user.email, user.password)
login_user(user, user.passwor, "/login")
login_user(user.email, user.password)
(current_user && current_user[:status] != Settings.user_status_retired)
current_user
user.status
logged_in?
login_user(user, user.password, "/login")
user
quit
next
Sorcery::TestHelpers::Rails::Request.login_user
Sorcery::TestHelpers::Rails::Request
Sorcery::TestHelpers
Sorcery.TestHelpers
Sorcery
quit
 params[:user][:name]
 params[:user]
 params[:user][:name]
 params[:name]
params
sk
params
quit
quit]
params
@email
@emial
quit
@email
sk
@email
sk
@email
quit
skip
next
quit
next
@email
quit
exit
exit]
@email
quit
@email
next
redirect_to action: :new
@email
quit
@user
@uaer
exit
quit
@user
exit
exi
 @user.password
quit
@user.password
 @user.email
quit
exit
cccCw
exit
flash[:notice]
flash[:alert]
quit
flash.keys
quit
flash.now[:alert]
flash[:alert]
flash
flash]
quit
alert
<%= flash[:alert] %>
<p id="alert"><%= flash[:alert] %></p>
flash[:alert]
quit
alert
quit
flash
alert
